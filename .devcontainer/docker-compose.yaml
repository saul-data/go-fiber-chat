version: '3'

volumes:
  node_modules:

services:
  hoppscotch:
    image: hoppscotch/hoppscotch:latest
    volumes:
      - "./hoppscotch/.hoppscotch:/app/.hoppscotch"
      - "./hoppscotch/assets:/app/assets"
      - "./hoppscotch/directives:/app/directives"
      - "./hoppscotch/layouts:/app/layouts"
      - "./hoppscotch/middleware:/app/middleware"
      - "./hoppscotch/pages:/app/pages"
      - "./hoppscotch/plugins:/app/plugins"
      - "./hoppscotch/static:/app/static"
      - "./hoppscotch/store:/app/store"
      - "./hoppscotch/components:/app/components"
      - "./hoppscotch/helpers:/app/helpers"
    environment:
      HOST: 0.0.0.0
    ports:
      - "3030:3000"
      
  chatapp:
    build:
      context: .
      dockerfile: Dockerfile
      args: 
        VARIANT: 1.16-bullseye
        NODE_VERSION: "14"

    # command: tail -f /dev/null
    volumes:
      # This is where VS Code should expect to find your project's source code and the value of "workspaceFolder" in .devcontainer/devcontainer.json
      - ..:/workspace:cached

      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock 

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"  

    # Runs app on the same network as the service container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:another-service

    # Uncomment the next line to use a non-root user for all processes - See https://aka.ms/vscode-remote/containers/non-root for details.
    user: vscode

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined

# networks:
#   default:
#     external: true
#     name: dataplane_network